---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: infra-ingress
  labels:
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: nginx-ingress
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: ingress-controller
    environment: shared
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-ingress
      app.kubernetes.io/instance: nginx-ingress
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx-ingress
        app.kubernetes.io/instance: nginx-ingress
        app.kubernetes.io/version: "1.1.0"
        app.kubernetes.io/part-of: smartpoli-platform
        app.kubernetes.io/component: ingress-controller
        environment: shared
    spec:
      serviceAccountName: ingress-admin-sa
      containers:
      - name: nginx-ingress-controller
        image: k8s.gcr.io/ingress-nginx/controller:v1.1.0
        args:
        - /nginx-ingress-controller
        - --publish-service=infra-ingress/nginx-ingress
        - --election-id=ingress-controller-leader
        - --ingress-class=nginx
        - --configmap=infra-ingress/nginx-configuration
        - --default-ssl-certificate=infra-ingress/tls-secret
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https
          containerPort: 443
          protocol: TCP
        - name: webhook
          containerPort: 8443
          protocol: TCP
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress
  namespace: infra-ingress
  labels:
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: nginx-ingress
    app.kubernetes.io/version: "1.1.0"
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: ingress-controller
    environment: shared
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: https
    protocol: TCP
  selector:
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: nginx-ingress
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configuration
  namespace: infra-ingress
  labels:
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: nginx-ingress
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: ingress-controller
    environment: shared
data:
  proxy-body-size: "8m"
  proxy-connect-timeout: "15"
  proxy-read-timeout: "60"
  proxy-send-timeout: "60"
  hsts: "true"
  hsts-include-subdomains: "true"
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: nginx
  namespace: infra-ingress
  labels:
    app.kubernetes.io/name: nginx-ingress
    app.kubernetes.io/instance: nginx-ingress
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: ingress-controller
    environment: shared
spec:
  controller: k8s.io/ingress-nginx

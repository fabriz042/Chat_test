---
apiVersion: v1
kind: Namespace
metadata:
  name: smartpoli-prod
  labels:
    app.kubernetes.io/name: smartpoli
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/managed-by: kubectl
    environment: prod
    purpose: application
    team: police-tech
    security-level: high
    compliance: government
---
# Resource Quota for Production Environment - Optimized for small VPS
apiVersion: v1
kind: ResourceQuota
metadata:
  name: smartpoli-prod-quota
  namespace: smartpoli-prod
  labels:
    app.kubernetes.io/name: smartpoli
    app.kubernetes.io/part-of: smartpoli-platform
    environment: prod
spec:
  hard:
    requests.cpu: "2500m"    # 2.5 CPU cores
    requests.memory: 3Gi     # 3GB RAM
    limits.cpu: "5"          # Max 5 CPU cores
    limits.memory: 6Gi       # Max 6GB RAM
    persistentvolumeclaims: "5"
    pods: "9"                # Maximum 9 pods
    services: "6"
    secrets: "10"
    configmaps: "15"
---
# Network Policy - Default Deny All
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: smartpoli-prod
  labels:
    app.kubernetes.io/name: smartpoli
    app.kubernetes.io/part-of: smartpoli-platform
    environment: prod
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
---
# RBAC for Production - Restricted access
apiVersion: v1
kind: ServiceAccount
metadata:
  name: smartpoli-prod-sa
  namespace: smartpoli-prod
  labels:
    app.kubernetes.io/name: smartpoli
    app.kubernetes.io/part-of: smartpoli-platform
    environment: prod
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: smartpoli-prod-role
  namespace: smartpoli-prod
  labels:
    app.kubernetes.io/name: smartpoli
    app.kubernetes.io/part-of: smartpoli-platform
    environment: prod
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "services"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: smartpoli-prod-rolebinding
  namespace: smartpoli-prod
  labels:
    app.kubernetes.io/name: smartpoli
    app.kubernetes.io/part-of: smartpoli-platform
    environment: prod
subjects:
- kind: ServiceAccount
  name: smartpoli-prod-sa
  namespace: smartpoli-prod
- kind: Group
  name: smartpoli-operators
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: smartpoli-prod-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service-config
  namespace: shared-services
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: auth-service
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: shared-service
    environment: shared
data:
  REDIS_HOST: "redis.smartpoli-dev.svc.cluster.local"
  REDIS_PORT: "6379"
  JWT_ALGORITHM: "HS256"
  JWT_EXPIRATION: "3600"
  PYTHONUNBUFFERED: "1"
---
apiVersion: v1
kind: Secret
metadata:
  name: auth-service-secrets
  namespace: shared-services
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: auth-service
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: shared-service
    environment: shared
type: Opaque
stringData:
  JWT_SECRET: "super-secret-jwt-key-for-development-only"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: shared-services
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: auth-service
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: shared-service
    environment: shared
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: auth-service
      app.kubernetes.io/instance: auth-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auth-service
        app.kubernetes.io/instance: auth-service
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/part-of: smartpoli-platform
        app.kubernetes.io/component: shared-service
        environment: shared
    spec:
      initContainers:
      - name: wait-for-redis
        image: busybox:1.34
        command: ['sh', '-c', 'until nc -z redis.smartpoli-dev.svc.cluster.local 6379; do echo waiting for redis; sleep 2; done;']
      containers:
      - name: auth-service
        image: smartpoli/auth-service:latest  # This would be your actual image in production
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: auth-service-config
        - secretRef:
            name: auth-service-secrets
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: shared-services
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: auth-service
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: shared-service
    environment: shared
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/instance: auth-service

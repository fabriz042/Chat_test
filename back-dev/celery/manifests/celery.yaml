---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: smartpoli-dev
  labels:
    app.kubernetes.io/name: celery-worker
    app.kubernetes.io/instance: celery-worker-dev
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: backend
    environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: celery-worker
      app.kubernetes.io/instance: celery-worker-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/name: celery-worker
        app.kubernetes.io/instance: celery-worker-dev
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/part-of: smartpoli-platform
        app.kubernetes.io/component: backend
        environment: dev
    spec:
      initContainers:
      - name: wait-for-db
        image: busybox:1.34
        command: ['sh', '-c', 'until nc -z postgresql 5432; do echo waiting for postgresql; sleep 2; done;']
      - name: wait-for-redis
        image: busybox:1.34
        command: ['sh', '-c', 'until nc -z redis 6379; do echo waiting for redis; sleep 2; done;']
      containers:
      - name: celery-worker
        image: python:3.10-slim
        command: ['sh', '-c', 'pip install -U pip && pip install django djangorestframework psycopg2-binary redis celery && celery -A smartpoli worker --loglevel=info']
        envFrom:
        - configMapRef:
            name: django-config
        - secretRef:
            name: django-secrets
        resources:
          requests:
            cpu: "150m"
            memory: "200Mi"
          limits:
            cpu: "300m"
            memory: "400Mi"
        livenessProbe:
          exec:
            command:
            - celery
            - -A
            - smartpoli
            - inspect
            - ping
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: smartpoli-dev
  labels:
    app.kubernetes.io/name: celery-beat
    app.kubernetes.io/instance: celery-beat-dev
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: backend
    environment: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: celery-beat
      app.kubernetes.io/instance: celery-beat-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/name: celery-beat
        app.kubernetes.io/instance: celery-beat-dev
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/part-of: smartpoli-platform
        app.kubernetes.io/component: backend
        environment: dev
    spec:
      initContainers:
      - name: wait-for-redis
        image: busybox:1.34
        command: ['sh', '-c', 'until nc -z redis 6379; do echo waiting for redis; sleep 2; done;']
      containers:
      - name: celery-beat
        image: python:3.10-slim
        command: ['sh', '-c', 'pip install -U pip && pip install django djangorestframework psycopg2-binary redis celery && celery -A smartpoli beat --loglevel=info']
        envFrom:
        - configMapRef:
            name: django-config
        - secretRef:
            name: django-secrets
        resources:
          requests:
            cpu: "50m"
            memory: "128Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"

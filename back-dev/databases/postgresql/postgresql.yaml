---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-credentials
  namespace: smartpoli-dev
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: postgresql-dev
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: database
    environment: dev
type: Opaque
stringData:
  POSTGRES_USER: smartpoli_user
  POSTGRES_PASSWORD: Dev_Password_123
  POSTGRES_DB: smartpoli_dev
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
  namespace: smartpoli-dev
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: postgresql-dev
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: database
    environment: dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: smartpoli-dev
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: postgresql-dev
    app.kubernetes.io/version: "13.5"
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: database
    environment: dev
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: postgresql-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/instance: postgresql-dev
        app.kubernetes.io/version: "13.5"
        app.kubernetes.io/part-of: smartpoli-platform
        app.kubernetes.io/component: database
        environment: dev
    spec:
      containers:
      - name: postgresql
        image: postgres:13.5-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: postgresql
          protocol: TCP
        envFrom:
        - secretRef:
            name: postgresql-credentials
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
          subPath: postgres
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - smartpoli_user
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - smartpoli_user
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          exec:
            command:
            - pg_isready
            - -U
            - smartpoli_user
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 30
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: postgresql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: smartpoli-dev
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: postgresql-dev
    app.kubernetes.io/version: "13.5"
    app.kubernetes.io/part-of: smartpoli-platform
    app.kubernetes.io/component: database
    environment: dev
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: postgresql
    protocol: TCP
    name: postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: postgresql-dev
